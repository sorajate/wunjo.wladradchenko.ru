name: CI/CD Pipeline Package Windows

on:
  workflow_dispatch:
    inputs:
      processor:
        description: 'Choose the processor type (gpu, cpu, zluda)'
        required: false
        default: 'gpu'

env:
  FORCE_COLOR: "1"
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  PROCESSOR: ${{ github.event.inputs.processor || 'gpu' }}  # Default to 'gpu' if not provided

jobs:
  build-and-deploy:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        target: [windows]
        include:
          - target: "windows"
            output-format: "msi"
            pre-command: |
              choco install visualstudio2022buildtools --confirm
              choco install visualstudio2022-workload-vctools --confirm
            runs-on: "windows-latest"
            python-version: "3.10"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Select processor configuration
        working-directory: portable
        shell: pwsh
        run: |
          Write-Host "Using processor: $env:PROCESSOR"
          if (-not (Test-Path "pyproject_$env:PROCESSOR.toml")) {
            throw "File pyproject_$env:PROCESSOR.toml not found!"
          }
          Copy-Item "pyproject_$env:PROCESSOR.toml" -Destination "pyproject.toml"

      - name: Set up Python environment
        shell: pwsh
        run: |
          python -m venv venv --copies

          .\venv\Scripts\Activate.ps1
          
          python -m pip install -U --force-reinstall pip
          python -m pip install -U setuptools wheel
          python -m pip install briefcase insightface

          python --version
          python -m pip --version

      - name: Build application
        shell: pwsh
        run: |
          .\venv\Scripts\Activate.ps1

          cd portable
          python -m briefcase build $env:TARGET

          Get-ChildItem -Path .\build -Recurse | Select-Object FullName | Write-Host

      - name: Package application
        shell: pwsh
        run: |
          .\venv\Scripts\Activate.ps1
          cd portable

          python -m briefcase package $env:TARGET --update --adhoc-sign --no-input --log

          $distFiles = Get-ChildItem -Path .\dist
          Write-Host "Created package files:"
          $distFiles | ForEach-Object { Write-Host $_.FullName }

      - name: Setup SSH
        if: env.SSH_PRIVATE_KEY != ''
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy via SSH
        if: env.SSH_PRIVATE_KEY != '' && env.SSH_USER != '' && env.SSH_HOST != ''
        working-directory: portable
        run: |
          scp -o StrictHostKeyChecking=no -r dist/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/